#Область ПроцедурыНастройкиФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.ТипИнтеграции		   = Перечисления.сшпТипыИнтеграции.Исходящая;
		Объект.Определение			   = "";
		Объект.ПроцедураОбработки	   = "";
		Объект.Отключен				   = Ложь;
		Объект.ПередаватьВерсиюОбъекта = Ложь;
		Объект.СервисИнтеграции		   = Справочники.сшпСервисыИнтеграции.ПустаяСсылка();
		Объект.Канал				   = Справочники.сшпКаналы.ПустаяСсылка();
		Объект.Инфосистема			   = Справочники.сшпИнфосистемы.ПустаяСсылка();
		Объект.ТипЗапроса 			   = Перечисления.сшпТипЗапроса.ИзменениеДанных;
		
	КонецЕсли;
	
	НастроитьВидимость();
	
	НастроитьЭлементы();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимость()
	
	Если Объект.ТипИнтеграции = Перечисления.сшпТипыИнтеграции.Исходящая Тогда
		
		ЭтаФорма.Элементы.ГруппаОпределение.Видимость				 	   = Истина;
		ЭтаФорма.Элементы.ГруппаНастройкиСервисаИнтеграции.Видимость	   = Истина;
		ЭтаФорма.Элементы.ГруппаДополнительныеИсходящиеПараметры.Видимость = Истина;
		
	ИначеЕсли Объект.ТипИнтеграции = Перечисления.сшпТипыИнтеграции.Входящая Тогда
		
		ЭтаФорма.Элементы.ГруппаОпределение.Видимость					   = Ложь;
		ЭтаФорма.Элементы.ГруппаНастройкиСервисаИнтеграции.Видимость	   = Ложь;
		ЭтаФорма.Элементы.ГруппаДополнительныеИсходящиеПараметры.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементы()
	
	ЭтаФорма.РеквизитВключен = Не Объект.Отключен;
	
	ЭтаФорма.Элементы.Наименование.СписокВыбора.ЗагрузитьЗначения(сшпОбщегоНазначенияПовтИсп.ПолучитьОбъектыИнтеграции());
	
КонецПроцедуры

&НаКлиенте
Процедура ТипИнтеграцииПриИзменении(Элемент)
	
	ТипИнтеграцииПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТипИнтеграцииПриИзмененииНаСервере()
	
	НастроитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ВключенПриИзменении(Элемент)
	
	ВключенПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВключенПриИзмененииНаСервере()
	
	Объект.Отключен = Не ЭтаФорма.РеквизитВключен;
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область РедактированиеОпределенияКлассаИнтеграции

&НаКлиенте
Процедура КомандаОпределение(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекстJSON", Объект.Определение);
	
	ооОтветРедактораJSON = Новый ОписаниеОповещения("ОбработчикОповещения_ОтветРедактораJSON", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.ТюнсофтРедактированиеJSON.Форма.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, ооОтветРедактораJSON, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ОтветРедактораJSON(стрТекстРедактораJSON, ДополнительныеПараметры) Экспорт
	
	Если стрТекстРедактораJSON = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Объект.Определение <> стрТекстРедактораJSON Тогда
		
		Объект.Определение = стрТекстРедактораJSON;	//редактировали структуру класса
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РедактированиеПроцедурыОбработкиКлассаИнтеграции

&НаКлиенте
Процедура КомандаПроцедураОбработки(Команда)
	
	//23.06.01 Волков А.
	//Справочник алгоритмы не используем, планируем на развитие.
	//Сейчас только редактор кода, этого достаточно для поставленной задачи.
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Алгоритм", Объект.ПроцедураОбработки);
	
	ооОтветРедактораКода = Новый ОписаниеОповещения("ОбработчикОповещения_ОтветРедактораКодаПроцедурыОбработки", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.РедакторКода.Форма.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, ооОтветРедактораКода, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещения_ОтветРедактораКодаПроцедурыОбработки(стрТекстРедактораКода, ДополнительныеПараметры) Экспорт
	
	Если стрТекстРедактораКода = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Объект.ПроцедураОбработки <> стрТекстРедактораКода Тогда
		
		Объект.ПроцедураОбработки = стрТекстРедактораКода;	//редактировали код процедуры обработки
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти